@using OnlineFurnitureStore.DAL
@using MvcPaging;
@model IPagedList<Tbl_Product>
@{
    ViewBag.Title = "Shop";
    Layout = "~/Views/Shared/_SubPageLayout.cshtml";
}
<br />
<br />
<div class="sub_page">
    <!-- brand section -->

    <section class="brand_section">
        <div class="container">
            <div class="row">
                <div class="col-md-8">
                    <div class="heading_container">
                        <h2>
                            Featured Brands
                        </h2>
                    </div>
                </div>
                @*<div class="col-md-4">
                        <form method="post">
                            <div class="olSearch fr">
                                <input type="text" name="search" placeholder="Enter Keyword" class="inputComn form-control" />
                                <div class="searchIcon">
                                    <button type="submit" class="searchBtn">
                                        <img src="~/Images/searchIcon.png" />
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>*@
            </div>
            <br />
            <div class="box" style="background-color: #e4e5e9; padding: 20px">
                @*<h5>Serach your choice</h5>*@
                @using (Ajax.BeginForm("Shop", "Home",
                                      new AjaxOptions { UpdateTargetId = "productsshop", HttpMethod = "get", LoadingElementId = "loading", OnBegin = "beginPaging", OnSuccess = "successPaging", OnFailure = "failurePaging" },
                                      new { id = "frm-search" }))
                {

                    @Html.Raw(ViewBag.msg)
                    <form>
                        <div class="row">
                            <div class="col-md-3">
                                <div class="olSearch fr">
                                    <input type="text" name="productname" value="@ViewData["ProductName"]" placeholder="Enter Product Name" class="inputComn form-control" />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="olSearch fr">
                                    <input type="text" name="category" value="@ViewData["Category"]" placeholder="Enter Category" class="inputComn form-control" />
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div class="olSearch fr">
                                    <select name="ActiveFlag" placeholder="Enter Availability" class="inputComn form-control">
                                        @if (ViewData["ActiveFlag"] != null && ViewData["ActiveFlag"].ToString() == "1")
                                        {
                                            <option value="-100">All</option>
                                            <option value="1" selected="selected">Available</option>
                                            <option value="0">Un Availabile</option>
                                        }
                                        else if (ViewData["ActiveFlag"] != null && ViewData["ActiveFlag"].ToString() == "0")
                                        {
                                            <option value="-100">All</option>
                                            <option value="1">Available</option>
                                            <option value="0" selected="selected">Un Available</option>
                                        }
                                        else
                                        {
                                            <option value="-100" selected="selected">All</option>
                                            <option value="1">Available</option>
                                            <option value="0">Un Available</option>
                                        }
                                    </select>
                                    @* <input type="text" name="search" placeholder="Enter Availability" class="inputComn form-control" />*@
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="olSearch fr">
                                    <input type="text" name="price" value="@ViewData["Price"]" placeholder="Enter Price" class="inputComn form-control" />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="olSearch fr">
                                    <input type="text" name="quantity" value="@ViewData["Quantity"]" placeholder="Enter Quantity" class="inputComn form-control" />
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="row" style="padding-right:10px">
                                    <div class="col-md-6">
                                        <div class="searchIcon">
                                            <button type="submit" class="btn btn-success">
                                                <img src="~/Images/searchIcon.png" />
                                            </button>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="searchIcon">
                                            <button class="btn btn-primary" href="@Url.Action("Shop", "Home")" @*onclick="clearSearch()"*@>
                                                Cl
                                            </button>
                                        </div>
                                    </div>

                                </div>
                            </div>

                        </div>

                    </form>
                }
            </div>
            <div class="brand_container layout_padding2" id="productsshop">
                @foreach (var item in Model)
                {
                    <div class="box">
                        <a href="">
                            <div class="new">
                                @if (item.IsFeatured == true)
                                {
                                    <h5>New</h5>
                                }
                                else
                                {
                                    <h5>Old</h5>
                                }
                            </div>
                            <div class="img-box">
                                <img src="~/ProductImg/@item.ProductImage" alt="">
                            </div>
                            <div class="detail-box">
                                <h6 class="price">

                                    Rs.@item.Price
                                </h6>
                                <h6>
                                    @item.ProductName
                                </h6>
                                @if (item.Quantity > 0)
                                {
                                    <h6>Available</h6>
                                    <table align="center" class="custom-table">
                                        <tr>
                                            <td>
                                                <a href="#" onclick="decreaseQuantity(this)">
                                                    <i class="fa fa-minus"></i>
                                                </a>
                                            </td>
                                            @*@Html.Hidden("Quantity", item.Quantity, new { id = "orgquantity" })*@
                                            @*<td class="quantity">1</td>*@
                                            <td class="quantity" data-max-quantity="@item.Quantity">1</td>
                                            <td>
                                                <a href="#" onclick="increaseQuantity(this)">
                                                    <i class="fa fa-plus"></i>
                                                </a>
                                            </td>
                                        </tr>

                                    </table>
                                    <br />
                                    using (Html.BeginForm("AddToCart", "Home", new { productId = item.ProductId, url = "Shop", id = "addtocartform" }, FormMethod.Post))
                                    {
                                        <button type="button" class="btn btn-success clrchange" onclick="addToCart(@item.ProductId, 'Shop', this)">Add to Cart</button>
                                    }
                                }
                                else
                                {
                                    <h6>Not Available</h6>
                                }

                            </div>
                        </a>
                    </div>
                }

            </div>
            <div class="pagination">
                @if (Model != null)
                {
                    @Html.Raw(Ajax.Pager(
                            new Options
                            {
                                PageSize = Model.PageSize,
                                TotalItemCount = Model.TotalItemCount,
                                CurrentPage = Model.PageNumber,
                                ItemTexts = new ItemTexts() { Next = "Next", Previous = "Prev" },
                                //ItemIcon = new ItemIcon() { First = "icon-backward", Previous = "icon-chevron-left", Next = "icon-chevron-right", Last = "icon-forward" },
                                TooltipTitles = new TooltipTitles() { Next = "Next page", Previous = "Previous page", Page = "Page {0}." },
                                Size = Size.normal,
                                Alignment = Alignment.centered,
                                IsShowControls = true,
                                IsShowFirstLast = false,
                                CssClass = ""
                            },
                            new AjaxOptions
                            {
                                UpdateTargetId = "productsshop",
                                OnBegin = "beginPaging",
                                OnSuccess = "successPaging",
                                OnFailure = "failurePaging"
                            }, new
                            {
                                controller = "Home",
                                action = "Shop",
                                Category = ViewData["Category"],
                                ProductName = ViewData["ProductName"],
                                Price = ViewData["Price"],
                                Quantity = ViewData["Quantity"],
                                ActiveFlag = ViewData["ActiveFlag"]
                            }))
                }
            </div>
            @*<div class="container">
                    @Html.PagedListPager(Model.ListOfProducts, page => Url.Action("Index", new { page, search = Request.QueryString["search"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayItemSliceAndTotal = true })
                </div>*@
        </div>

        @*<div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="container">
                            @Html.PagedListPager(Model.ListOfProducts, page => Url.Action("Shop", new { page, search = Request.QueryString["search"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayItemSliceAndTotal = true })
                        </div>
                    </div>
                </div>
            </div>*@
    </section>

    <div class="modal fade" id="cartModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <!-- Modal content -->
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Cart Message</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body text-center">
                    <h6>Your product is successfully inserted into cart!!</h6>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Ok</button>
                </div>
            </div>
        </div>
    </div>
    <!-- end brand section -->
</div>
@section scripts{
    <script>
        function decreaseQuantity(element) {
            var quantityElement = element.parentNode.nextElementSibling;
            var quantity = parseInt(quantityElement.textContent);
            if (quantity > 1) {
                quantityElement.textContent = quantity - 1;
            }
        }

        function increaseQuantity(element) {
            var quantityElement = element.parentNode.previousElementSibling;
            var currentQuantity = parseInt(quantityElement.textContent);
            var maxQuantity = parseInt(quantityElement.dataset.maxQuantity);
            //var maxQuantity = parseInt($("#orgquantity").val());

            console.log("Quantity element:", quantityElement);
            console.log("Current quantity:", currentQuantity);
            console.log("Original quantity:", maxQuantity);

            if (isNaN(maxQuantity)) {
                console.error("Original quantity is not a number.");
                return;
            }

            if (currentQuantity < maxQuantity) {
                quantityElement.textContent = currentQuantity + 1;
            } else {
                alert("Cannot increase quantity beyond maximum.");
            }
        }

        function addToCart(productId, url, quantityElement) {
            var quantity = parseInt($(quantityElement).closest('.detail-box').find('.quantity').text().trim(), 10);

            console.log("Quantity:", quantity);
            // Construct the data object
            var data = {
                productId: productId,
                quantity: quantity,
                url: url
            };
            console.log("data:", data);
            // Send the data to the server using AJAX
            $.ajax({
                url: "/Home/AddToCart",  // URL of the controller action
                type: "POST", // Use POST method
                contentType: "application/json", // Set content type to JSON
                data: JSON.stringify(data),
                success: function (response) {
                    // Handle the success response from the server
                    console.log("Item added to cart successfully!");
                    $("#cartModal").modal("show");
                    // Optionally, you can update the page or perform other actions
                },
                error: function (xhr, status, error) {
                    // Handle errors
                    console.error("Error adding item to cart:", error);
                }
            });
        }


        function clearSearch() {
            // Reset the values of search fields
            document.getElementsByName('productname')[0].value = '';
            document.getElementsByName('category')[0].value = '';
            document.getElementsByName('price')[0].value = '';
            document.getElementsByName('quantity')[0].value = '';
            document.getElementsByName('ActiveFlag')[0].value = '';

            console.log('Clear search function called');
        }
        $(document).ready(function () {
            $('div.pagination ul').addClass('pagination');
        });

    </script>
}