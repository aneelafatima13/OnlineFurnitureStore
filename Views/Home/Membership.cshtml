@model OnlineFurnitureStore.DAL.Tbl_Members
@{
    ViewBag.Title = "Membership";
    Layout = "~/Views/Shared/_SubPageLayout.cshtml";
}

<div class="sub_page">
    <!-- contact section -->

    <section class="contact_section layout_padding">
        <div class="container ">
            <div class="heading_container">
                <h2 class="">
                    Add Membership
                </h2>
            </div>

        </div>
        <div class="container">
            <div class="row">

                <div class="col-md-6">
                    @using (Html.BeginForm("Membership", "Home", null, FormMethod.Post, new { id = "membershipform"@*, url = "CheckoutDetails"*@ }))
                    {
                        <div class="mform">
                            @Html.TextBoxFor(model => model.FirstName, new { placeholder = "First Name", @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            <span class="error-msg" id="firstNameError"></span>
                        </div>
                        <div class="mform">
                            @Html.TextBoxFor(model => model.LastName, new { placeholder = "Last Name", @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            <span class="error-msg" id="lastNameError"></span>
                        </div>
                        <div class="mform">
                            @Html.TextBoxFor(model => model.EmailId, new { placeholder = "Email", @class = "form-control", required = "required", type = "email" })
                            @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                            <span class="error-msg" id="emailError"></span>
                        </div>
                        <div class="mform">
                            @Html.PasswordFor(model => model.Password, new { placeholder = "Password", id = "password-input", @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            <span class="error-msg" id="passwordError"></span>
                        </div>
                        <div class="mform">
                            @Html.PasswordFor(model => model.ConfirmPassword, new { placeholder = "Confirm Password", id = "confirmpassword-input", @class = "form-control", required = "required" })
                            @*<input type="password" id="confirmPassword" name="confirmPassword" class="form-control" required="required" placeholder="Confirm Password">*@
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            <span class="error-msg" id="confirmPasswordError"></span>
                        </div>
                        <div class="d-flex">
                            <button type="submit">Checkout Details</button>
                        </div>
                    }
                </div>
                <div class="col-md-6">

                </div>
            </div>
        </div>
    </section>

    <!-- end contact section -->
</div>
@section scripts{
    <!-- jQuery Validation plugin -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/additional-methods.min.js"></script>

    <script>
        //memberformvalidation(){

        //}
        $.validator.addMethod("strongPassword", function (value, element) {
            return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{4,}/.test(value);
        }, "Your password must contain at least one lowercase letter, one uppercase letter, one digit and be at least 4 characters long.");

        $.validator.addMethod("confirmPassword", function (value, element, param) {
            return this.optional(element) || value === $(param).val();
        }, "Passwords do not match.");

        // Initialize form validation
        $('#membershipform').validate({
            errorClass: 'error-msg',
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.insertAfter(element);
            },
            highlight: function (element) {
                $(element).addClass('error');
            },
            unhighlight: function (element) {
                $(element).removeClass('error');
            },
            rules: {
                FirstName: {
                    required: true
                },
                LastName: {
                    required: true
                },
                EmailId: {
                    required: true,
                    email: true
                },
                Password: {
                    required: true,
                    strongPassword: true
                },
                confirmPassword: {
                    required: true,
                    confirmPassword: "#password-input"
                }
            },
            messages: {
                FirstName: {
                    required: "Please enter your first name."
                },
                LastName: {
                    required: "Please enter your last name."
                },
                EmailId: {
                    required: "Please enter your email address.",
                    email: "Please enter a valid email address."
                },
                Password: {
                    required: "Please enter a password."
                },
                confirmPassword: {
                    required: "Please confirm your password.",
                    confirmPassword: "Passwords do not match."
                }
            },
            submitHandler: function (form) {
                form.submit();
            }
        });

            //$.validator.addMethod("ValidNumber", function (value, element) {
            //    // Define your password criteria here
            //    return /^03\d{9}$/.test(value);
            //}, "Your Phone number muust start with 03 and total 11 digits");

            //jQuery.validator.addMethod("confirmPassword", function (value, element, param) {
            //    return this.optional(element) || value === $(param).val();
            //}, "Passwords do not match.");

            //jQuery.validator.addMethod("strongPassword", function (value, element) {
            //    // Define your password criteria here
            //    return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{4,}/.test(value);
            //}, "Your password must contain at least one lowercase letter, one uppercase letter and one digit and be at least 4 characters long.");

            //$('#membershipform').validate({
            //    errorClass: 'error-msg',
            //    errorElement: 'span',
            //    errorPlacement: function (error, element) {
            //        error.insertAfter(element);
            //    },
            //    highlight: function (element) {
            //        $(element).addClass('error');
            //    },
            //    unhighlight: function (element) {
            //        $(element).removeClass('error');
            //    },
            //    rules: {
            //        FirstName: {
            //            required: true
            //        },
            //        LastName: {
            //            required: true
            //        },
            //        Email: {
            //            required: true,
            //            email: true
            //        },
            //        Password: {
            //            required: true,
            //            strongPassword: true
            //        },
            //        confirmPassword: {
            //            required: true,
            //            equalTo: "#password-input" // reference to the password field
            //        },
            //        PhoneNo: {
            //            required: true,
            //            ValidNumber: true
            //        }
            //    },
            //    messages: {

            //        FirstName: {
            //            required: 'Please enter a username',
            //            minlength: 'Your username must consist of at least 3 characters'
            //        },
            //        LastName: {
            //            required: 'Please enter a username',
            //            minlength: 'Your username must consist of at least 3 characters'
            //        },
            //        Email: 'Please enter a valid email address',
            //        Password: {
            //            required: 'Please provide a password',
            //            strongPassword: 'Your password must contain at least one lowercase letter, one uppercase letter, one digit and be at least 4 characters long.'

            //        },
            //        confirmPassword: {
            //            required: 'Please enter password.',
            //            equalTo: 'Please enter the same password as above',
            //            strongPassword: 'Your password must contain at least one lowercase letter, one uppercase letter, one digit and be at least 4 characters long.'

            //        },
            //        PhoneNo: {
            //            required: 'Please enter a Phone No',
            //            ValidNumber: 'Your Phone number muust start with 03 and total 11 digits'
            //        }

            //    }
            //});

            //$('#membershipform').submit(function () {
            //    if ($(this.valid())) {
            //        $('#membershipform').submit();
            //    }
            //});
    </script>

}